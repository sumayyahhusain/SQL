-- This project analyzes the Chinoook database: a digital media store. This databse includes tables for artists, albums, media tracks, invoices, and customers. 
-- After taking a look at the data, I came up with questons that I wanted to answer. 
-- Below are 20 queries I created using Standrad SQL and SQLite Studio. 

-- 1. Which artists have the most albums in the database?
SELECT 
  ar.Name AS ArtistName, 
  ar.ArtistId,
  COUNT(al.AlbumId) AS NumberOfAlbums
FROM artists ar
JOIN albums al
ON ar.ArtistId = al.ArtistId
GROUP BY ar.ArtistId
HAVING COUNT(al.AlbumId) > 1
ORDER BY NumberOfAlbums DESC;

-- 2. What are the names and emails of all employees with a Management title?
SELECT FirstName, LastName, Title, Email
FROM employees
WHERE Title like '%Manage%';

-- 3. How many invoices are on record for 2009?
SELECT COUNT(*) AS [2009Invoices]
FROM invoices
WHERE InvoiceDate like '2009%';

-- 4. How many invoices were created each year?
SELECT 
  strftime('%Y', InvoiceDate) AS Year, 
  COUNT(*) AS NumberOfInvoices
FROM  invoices
GROUP BY Year;

-- 5. Which genre is most present in the database?
SELECT 
  tracks.GenreId, 
  genres.Name, 
  COUNT(tracks.GenreId) AS NumTracks
FROM tracks
JOIN genres
ON tracks.GenreId = genres.GenreId
GROUP BY tracks.GenreId
ORDER BY NumTracks DESC;

-- 6. Show the customer Id, names, and total spent of all customers that spent over $40 over all their purchases and label them as Top buyers. 
WITH totalSpentCTE AS (
SELECT 
  invoices.CustomerId, 
  customers.FirstName, 
  customers.LastName, 
  SUM(invoices.Total) AS TotalSpent
FROM invoices
JOIN customers
ON customers.CustomerId = invoices.CustomerId
GROUP BY invoices.CustomerID
)
SELECT 
  CustomerId, 
  FirstName, 
  LastName, 
  TotalSpent, 
  'Top Buyer' AS CustomerRank
FROM totalSpentCTE 
WHERE TotalSpent >= 40
ORDER BY TotalSpent DESC;

-- 7. Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT FirstName, LastName, CustomerID, Country 
FROM customers
WHERE Country <> 'USA';

-- 8. Show only the customers for Brazil
SELECT FirstName, LastName , CustomerID, Country 
FROM customers
WHERE Country = 'Brazil';

-- 9. Find the Invoices of customers who are from Brazil. 
-- The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT 
  customers.FirstName, 
  customers.LastName, 
  invoices.InvoiceID, 
  invoices.InvoiceDate, 
  invoices.BillingCountry
FROM invoices
JOIN customers
ON invoices.customerID = customers.customerID
WHERE invoices.BillingCountry = 'Brazil';

-- 10. Show the Employees who are Sales Agents.
SELECT FirstName, LastName, Title 
FROM employees
WHERE Title like '%Sales%Agent%';

-- 11. Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry 
FROM invoices;

-- 12. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT 
  invoices.InvoiceID, 
  employees.FirstName, 
  employees.LastName, 
  employees.EmployeeID
FROM invoices;

JOIN customers 
ON invoices.CustomerId = customers.CustomerId

JOIN employees
on customers.SupportRepID = employees.EmployeeID;

-- 13. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT 
    customers.FirstName AS CustFirstName, 
    customers.LastName AS CustLastName, 
    invoices.BillingCountry, 
    invoices.Total, 
    employees.FirstName AS AgentFirstName, 
    employees.LastName AS AgentLastName
FROM invoices

JOIN customers
ON invoices.CustomerId = customers.CustomerId

JOIN employees
ON customers.SupportRepID = employees.EmployeeId

ORDER BY AgentFirstName, AgentLastName;

-- 14. What are the total sales for 2009?
SELECT SUM(total) AS TotalSales2009
FROM invoices
WHERE InvoiceDate like '2009%';

-- 15. Write a query that includes the purchased track name with each invoice line ID.
SELECT invoices.invoiceId, tracks.Name
FROM invoices

JOIN invoice_items
ON invoices.invoiceId = invoice_items.InvoiceId

JOIN tracks
ON invoice_items.TrackId = tracks.TrackId;

-- 16. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT 
    invoice_items.invoiceID, 
    tracks.Name AS "TrackName", 
    artists.Name AS "ArtistName"
FROM invoice_items

JOIN tracks 
ON invoice_items.TrackId = tracks.TrackId

JOIN albums
ON tracks.AlbumId = albums.AlbumId

JOIN artists
ON albums.ArtistId = artists.ArtistId;

-- 17. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT DISTINCT
  tracks.Name AS "TrackName", 
  albums.Title AS "Album", 
  media_types.Name AS "MediaType", 
  genres.Name AS "Genre"
FROM tracks

JOIN albums
ON tracks.AlbumId = albums.AlbumId

JOIN media_types
ON tracks.MediaTypeId = media_types.MediaTypeId

JOIN genres
ON tracks.genreId = genres.genreId;

-- #18. Show the total sales made by each sales agent.
SELECT 
    employees.FirstName, 
    employees.LastName, 
    SUM(invoices.Total) AS "TotalSales"
FROM invoices

JOIN customers
ON invoices.CustomerId = customers.CustomerId

JOIN employees
ON customers.SupportRepId = employees.EmployeeId

GROUP BY employees.FirstName, employees.LastName;

-- #19. Which sales agent made the most dollars in sales in 2009?
WITH totalSales2009CTE AS (
SELECT 
    employees.FirstName AS "FirstName", 
    employees.LastName AS "LastName", 
    SUM(invoices.Total) AS "TotalSales"
FROM invoices

JOIN customers
ON invoices.CustomerId = customers.CustomerId

JOIN employees
ON customers.SupportRepId = employees.EmployeeId

WHERE invoices.InvoiceDate like '2009%'
GROUP BY employees.FirstName, employees.LastName
)

SELECT FirstName, LastName, MAX(TotalSales) As "2009Sales"
FROM totalSales2009CTE;

-- #20. Show the longest track in minutes.
SELECT Name, MAX(milliseconds) / 60000 AS DurationMinutes
FROM tracks;
